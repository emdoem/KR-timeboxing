{"version":3,"file":"static/js/331.266b623d.chunk.js","mappings":"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","sources":["components/UserGreeting.js","components/Header.js","components/TimeboxCreatorFunc.js","api/FakeTimeboxesAPI.js","components/TimeboxesList.js","components/ReadOnlyTimebox.js","components/TimeboxEditor.js","components/EditableTimebox.1.js","components/actions.js","components/TimeboxManager.js","components/Clock.js","lib/time.js","components/ProgressBar.js","components/CurrentTimebox.js","components/InspirationalQuoteFunc.js","components/AuthenticatedApp.js"],"sourcesContent":["import React, { useContext } from 'react';\r\n// using jose instead of jsonwebtoken lib - the latter no longer supported\r\nimport * as jose from \"jose\";\r\nimport AuthenticationContext from '../contexts/AuthenticationContexts';\r\n\r\nfunction UserGreeting(props) {\r\n    const {accessToken} = useContext(AuthenticationContext);\r\n    return (\r\n        <>Hi {getUserEmail(accessToken)}!</>\r\n    );\r\n}\r\n\r\nexport default UserGreeting;\r\n\r\nfunction getUserEmail(accessToken) {\r\n    const userEmail = jose.decodeJwt(accessToken).email;\r\n    return userEmail;\r\n}","import React from 'react';\r\nimport UserGreeting from './UserGreeting';\r\nimport AuthenticationContext from '../contexts/AuthenticationContexts';\r\n\r\n\r\nfunction Header() {\r\n    return (\r\n        <header className=\"header\">\r\n            <UserGreeting />\r\n            <AuthenticationContext.Consumer>\r\n                {({ handleLogout }) =>\r\n                    <a\r\n                        onClick={handleLogout}\r\n                        className=\"header__logout-link\"\r\n                        href=\"#\"\r\n                    >Log out</a>}\r\n            </AuthenticationContext.Consumer>\r\n\r\n        </header>\r\n\r\n    );\r\n}\r\n\r\nexport default Header;","import React, { useRef } from 'react';\r\n\r\nfunction TimeboxCreator(props) {\r\n    const titleInput = useRef();\r\n    const totalTimeInMinutesInput = useRef();\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        props.onCreate({\r\n            title: titleInput.current.value,\r\n            totalTimeInMinutes: totalTimeInMinutesInput.current.value,\r\n            finished: false\r\n        });\r\n        titleInput.current.value = \"\";\r\n        totalTimeInMinutesInput.current.value = \"\";\r\n    }\r\n\r\n    return (\r\n        <form\r\n            onSubmit={handleSubmit}\r\n            className=\"TimeboxCreator\"\r\n        >\r\n            <label>\r\n                What are you doing?\r\n                <input\r\n                    ref={titleInput}\r\n                    type=\"text\"\r\n                />\r\n            </label><br />\r\n            <label>\r\n                How much time will it take?\r\n                <input\r\n                    ref={totalTimeInMinutesInput}\r\n                    type=\"number\"\r\n                    step=\"0.01\"\r\n                />\r\n            </label><br />\r\n            <button\r\n\r\n            >Add Timebox</button>\r\n        </form>\r\n    )\r\n\r\n}\r\n\r\nexport default TimeboxCreator;","import {v4 as uuidv4} from \"uuid\";\r\n\r\n\r\nfunction wait(ms=1000) {\r\n    return new Promise(\r\n        (resolve) => {\r\n            setTimeout(resolve, ms);\r\n        }\r\n    )\r\n}\r\nconst timeboxes = [\r\n    { id: 1, title: \"Task A\", totalTimeInMinutes: 25, finished: false },\r\n    { id: 2, title: \"Task B\", totalTimeInMinutes: 15, finished: false },\r\n    { id: 3, title: \"Task C\", totalTimeInMinutes: 5, finished: false },\r\n    { id: 4, title: \"Task D\", totalTimeInMinutes: 2, finished: false }\r\n];\r\nfunction findIndexById(id) {\r\n    const result = timeboxes.findIndex((timebox) => timebox.id == id);\r\n    if (result < 0) {\r\n        throw new Error(\"Timebox with this id doesn't exist\");\r\n    }\r\n    return result;\r\n}\r\nconst FakeTimeboxesAPI = {\r\n    getAllTimeboxes: async function() {\r\n        await wait(200);\r\n        // console.log(timeboxes);\r\n        return [...timeboxes];\r\n    },\r\n    addTimebox: async function(timeboxToAdd) {\r\n        await wait(200);\r\n        const addedTimebox = {...timeboxToAdd, id: uuidv4()}\r\n        timeboxes.push(addedTimebox);\r\n        // console.log(timeboxes);\r\n        return addedTimebox;\r\n    },\r\n    replaceTimebox: async function(timeboxToReplace) {\r\n        await wait(200);\r\n        if (!timeboxToReplace.id) {\r\n            throw new Error(\"Cannot replace timebox without an id\")\r\n        }\r\n        const index = findIndexById(timeboxToReplace.id);\r\n        const replacedTimebox = {...timeboxToReplace};\r\n        // console.log(timeboxes);\r\n        return replacedTimebox;\r\n    },\r\n    /*\r\n    partiallyReplaceTimebox: async function(timeboxToReplace) {\r\n        await wait(1000);\r\n        if (!timeboxToReplace.id) {\r\n            throw new Error(\"Cannot replace timebox without an id\")\r\n        }\r\n        const index = findIndexById(timeboxToReplace.id);\r\n        for (property in timeboxToReplace) {\r\n\r\n        }\r\n    },\r\n    */\r\n    removeTimebox: async function(timeboxToRemove) {\r\n        await wait(200);\r\n        if (!timeboxToRemove.id) {\r\n            throw new Error(\"Cannot remove timebox without an id\")\r\n        }\r\n        const index = findIndexById(timeboxToRemove.id);\r\n        // console.log(timeboxes);\r\n        timeboxes.splice(index, 1);\r\n    }\r\n}\r\n\r\nexport default FakeTimeboxesAPI;","import React, { useEffect } from 'react';\r\nimport Error from \"./ErrorBoundary\";\r\nimport { Timebox } from './TimeboxManager';\r\nimport { getAllTimeboxes, getRemainingTimeboxes } from './timeboxesReducer';\r\n\r\nimport { useForceUpdate } from './reduxStore';\r\nimport { connect, useStore } from 'react-redux';\r\n\r\nexport function TimeboxesList({ timeboxes, renderTimebox }) {\r\n    return <div className=\"TimeboxesList\">{timeboxes.map(renderTimebox)}</div>\r\n}\r\n\r\n// since state is combined out of 2 reducers, \r\n// the .timeboxesManager property needed to be specified in mapStateToProps fn.\r\nexport const AllTimeboxesList = connect(\r\n    (state) => ({ timeboxes: getAllTimeboxes(state.timeboxesManager) })\r\n)(TimeboxesList);\r\n\r\nexport const RemainingTimeboxesList = connect(\r\n    (state) => ({ timeboxes: getRemainingTimeboxes(state.timeboxesManager) })\r\n)(TimeboxesList);\r\n","import React from 'react';\r\n\r\nclass ReadOnlyTimebox extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.updatedTitleInput = React.createRef();\r\n    }\r\n    \r\n    render () {\r\n        const { title, totalTimeInMinutes } = this.props;\r\n        if (totalTimeInMinutes <= 0) {\r\n            throw new Error(\"Całkowity czas musi być większy niż zero!\");\r\n        };\r\n        return (\r\n            <div \r\n                className=\"Timebox\"\r\n            >\r\n                <h3>{title} - {totalTimeInMinutes} min. </h3>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ReadOnlyTimebox;","import React, { useRef } from 'react';\r\n\r\nfunction TimeboxEditor(props) {\r\n    const titleInput = useRef();\r\n    const totalTimeInMinutesInput = useRef();\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        props.onUpdate({\r\n            title: titleInput.current.value,\r\n            totalTimeInMinutes: totalTimeInMinutesInput.current.value\r\n        });\r\n\r\n        resetToInitialValues();\r\n    }\r\n\r\n    const handleCancel = () => {\r\n        props.onCancel();\r\n        resetToInitialValues();\r\n    }\r\n\r\n    const resetToInitialValues = () => {\r\n        titleInput.current.value = props.initialTitle;\r\n        totalTimeInMinutesInput.current.value = props.initialTotalTimeInMinutes;\r\n    }\r\n\r\n    return (\r\n        <form\r\n            onSubmit={handleSubmit}\r\n            className=\"TimeboxCreator\"\r\n        >\r\n            <label>\r\n                What are you doing?\r\n                <input\r\n                    ref={titleInput}\r\n                    defaultValue={props.initialTitle}\r\n                    type=\"text\"\r\n                />\r\n            </label><br />\r\n            <label>\r\n                How much time will it take?\r\n                <input\r\n                    ref={totalTimeInMinutesInput}\r\n                    defaultValue={props.initialTotalTimeInMinutes}\r\n                    type=\"number\"\r\n                    step=\"0.01\"\r\n                />\r\n            </label><br />\r\n            <a onClick={handleCancel}>Cancel</a>\r\n            <button>Save</button>\r\n        </form>\r\n    )\r\n\r\n}\r\n\r\nexport default TimeboxEditor;","import React from 'react';\r\nimport TimeboxEditor from './TimeboxEditor';\r\nimport { Timebox } from './TimeboxManager';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { isTimeboxEdited } from './timeboxesReducer';\r\nimport { startEditingTimebox, stopEditingTimebox, makeTimeboxCurrent } from './actions';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    isEdited: isTimeboxEdited(state.timeboxesManager, ownProps.timebox)\r\n})\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    const onEdit = () => dispatch(startEditingTimebox(ownProps.timebox.id));\r\n    const onCancel = () => dispatch(stopEditingTimebox());\r\n    const onMakeCurrent = () => dispatch(makeTimeboxCurrent(ownProps.timebox))\r\n\r\n    return { onEdit, onCancel, onMakeCurrent };\r\n}\r\n\r\nexport const EditableTimebox = connect(mapStateToProps, mapDispatchToProps)(\r\n    function EditableTimebox({\r\n        timebox, isEdited, onCancel, onEdit, onUpdate, onDelete, onMakeCurrent }) {\r\n        return <>\r\n            {isEdited ?\r\n                <TimeboxEditor\r\n                    key={timebox.id}\r\n                    initialTitle={timebox.title}\r\n                    initialTotalTimeInMinutes={timebox.totalTimeInMinutes}\r\n                    onCancel={onCancel}\r\n                    onUpdate={onUpdate}\r\n                /> :\r\n                <Timebox\r\n                    key={timebox.id}\r\n                    title={timebox.title}\r\n                    totalTimeInMinutes={timebox.totalTimeInMinutes}\r\n                    onDelete={onDelete}\r\n                    onEdit={onEdit}\r\n                    onMakeCurrent={onMakeCurrent}\r\n                />\r\n            }\r\n        </>;\r\n    }\r\n)\r\n","import TimeboxesAPI from \"../api/FakeTimeboxesAPI\"\r\nimport { getCurrentTimebox } from \"./timeboxesReducer\";\r\n\r\nexport const setTimeboxes = timeboxes => ({ type: \"TIMEBOXES_SET\", timeboxes });\r\nexport const setError = error => ({ type: \"ERROR_SET\", error });\r\nexport const disableLoadingIndicator = () => ({ type: \"LOADING_INDICATOR_DISABLE\" });\r\nexport const addTimebox = timebox => ({ type: \"TIMEBOX_ADD\", timebox });\r\nexport const removeTimebox = removedTimebox => ({ type: \"TIMEBOX_REMOVE\", removedTimebox });\r\nexport const replaceTimebox = replacedTimebox => ({ type: \"TIMEBOX_REPLACE\", replacedTimebox });\r\nexport const startEditingTimebox = currentlyEditedTimeboxId => ({ type: \"TIMEBOX_EDIT_START\", currentlyEditedTimeboxId });\r\nexport const stopEditingTimebox = () => ({ type: \"TIMEBOX_EDIT_STOP\" });\r\nexport const makeTimeboxCurrent = timebox => ({ type: \"TIMEBOX_MAKE_CURRENT\", timebox });\r\nexport const closeCurrentTimebox = () => ({ type: \"CURRENT_TIMEBOX_CLOSE\" });\r\nexport const finishTimeboxOffTheList = (finishedTimebox) => ({ type: \"TIMEBOX_FINISH\", finishedTimebox });\r\n\r\n// insert custom URL in the call below:\r\n// const TimeboxesAPI = createTimeboxesAPI(\"http://localhost:5000/timeboxes/\");\r\n\r\nexport const fetchAllTimeboxes = (accessToken) => (dispatch) => {\r\n    TimeboxesAPI.getAllTimeboxes(accessToken).then(\r\n        (timeboxes) => {\r\n            dispatch(setTimeboxes(timeboxes))\r\n            // console.table(timeboxes)\r\n        }\r\n    ).catch(\r\n        (error) => dispatch(setError(error))\r\n    ).finally(\r\n        () => dispatch(disableLoadingIndicator())\r\n    )\r\n}\r\n\r\nexport const removeTimeboxRemotely = (timebox, accessToken) => dispatch => {\r\n    TimeboxesAPI.removeTimebox(timebox, accessToken)\r\n        .then(\r\n            () => dispatch(removeTimebox(timebox))\r\n        );\r\n}\r\n\r\nexport const updateTimeboxRemotely = (timebox, updatedTimebox, accessToken) => dispatch => {\r\n    TimeboxesAPI.replaceTimebox({ ...timebox, ...updatedTimebox }, accessToken)\r\n        .then(\r\n            (replacedTimebox) => dispatch(replaceTimebox(replacedTimebox))\r\n        )\r\n    dispatch(stopEditingTimebox());\r\n};\r\n\r\nexport const finishTimeboxRemotely = (timebox, accessToken) => dispatch => {\r\n    const updatedTimebox = { ...timebox, finished: true}\r\n    TimeboxesAPI.replaceTimebox({ ...timebox, ...updatedTimebox }, accessToken)\r\n        .then(finishedTimebox => dispatch(finishTimeboxOffTheList(finishedTimebox)))\r\n}\r\n\r\nexport const runTimer = () => ({ type: \"TIMER_RUNNING\" });\r\nexport const startTimerAction = () => ({ type: \"TIMER_START\" });\r\nexport const stopTimerAction = () => ({ type: \"TIMER_STOP\" });\r\nexport const togglePauseAction = () => ({ type: \"PAUSE_TOGGLE\" });\r\nexport const resetCurrentTimebox = () => ({ type: \"CURRENT_TIMEBOX_RESET\" });\r\n// export const finishCurrentTimebox = () => ({ type: \"CURRENT_TIMEBOX_FINISH\" });","import React, { useEffect, useContext, useReducer } from 'react';\r\n\r\nimport TimeboxCreator from \"./TimeboxCreatorFunc\";\r\n// import Timebox from \"./Timebox\";\r\nimport Error from \"./ErrorBoundary\";\r\nimport TimeboxesAPI from \"../api/FakeTimeboxesAPI\"\r\nimport AuthenticationContext from '../contexts/AuthenticationContexts';\r\nimport { AllTimeboxesList, RemainingTimeboxesList } from './TimeboxesList';\r\nimport ReadOnlyTimebox from './ReadOnlyTimebox';\r\nimport { areTimeboxesLoading, getTimeboxesLoadingError } from './timeboxesReducer';\r\nimport { fetchAllTimeboxes, removeTimeboxRemotely, updateTimeboxRemotely, addTimebox } from './actions';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { EditableTimebox } from './EditableTimebox.1';\r\n\r\nexport const Timebox = React.lazy(() => import('./Timebox'));\r\n\r\n// insert custom URL in the call below:\r\n// const TimeboxesAPI = createTimeboxesAPI(\"http://localhost:5000/timeboxes/\");\r\n\r\nfunction TimeboxManager() {\r\n\r\n    const dispatch = useDispatch();\r\n    const timeboxesLoading = useSelector(areTimeboxesLoading);\r\n    const timeboxesLoadingError = useSelector(getTimeboxesLoadingError);\r\n    const { accessToken } = useContext(AuthenticationContext);\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchAllTimeboxes(accessToken))\r\n    }, [])\r\n\r\n    const handleCreate = (createdTimebox) => {\r\n        try {\r\n            TimeboxesAPI.addTimebox(createdTimebox, accessToken).then(\r\n                (addedTimebox) => dispatch(addTimebox(addedTimebox))\r\n            );\r\n        } catch (error) {\r\n            console.log(\"Wystąpił błąd przy tworzeniu timeboxa: \", error);\r\n        }\r\n    }\r\n\r\n    const renderTimebox = (timebox) => {\r\n        const onUpdate = (updatedTimebox) => dispatch(updateTimeboxRemotely(timebox, updatedTimebox, accessToken))\r\n        const onDelete = () => dispatch(removeTimeboxRemotely(timebox, accessToken))\r\n\r\n        return <EditableTimebox\r\n            timebox={timebox}\r\n            onUpdate={onUpdate}\r\n            onDelete={onDelete}\r\n        />\r\n\r\n    }\r\n\r\n    function renderReadOnlyTimebox(timebox, index) {\r\n        return <ReadOnlyTimebox\r\n            key={timebox.id}\r\n            title={timebox.title}\r\n            totalTimeInMinutes={timebox.totalTimeInMinutes}\r\n        />\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <TimeboxCreator onCreate={handleCreate} />\r\n            {timeboxesLoading ? \"Timeboxy się ładują...\" : null}\r\n            {timeboxesLoadingError ? \"Coś się wykrzaczyło w liście :(\" : null}\r\n            <Error message=\"Coś się wykrzaczyło w liście :(\">\r\n                <RemainingTimeboxesList\r\n                    renderTimebox={renderTimebox}\r\n                />\r\n            </Error>\r\n\r\n\r\n        </>\r\n    )\r\n\r\n}\r\nTimeboxManager.contextType = AuthenticationContext;\r\n\r\nexport default TimeboxManager;\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { getMinsAndSecsFromSecs } from \"../lib/time\";\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const {elapsedTimeInSeconds} = state.currentTimebox;\r\n    const timeLeftInSeconds = ownProps.totalTimeInSeconds - elapsedTimeInSeconds;\r\n    const [minutesLeft, secondsLeft] = getMinsAndSecsFromSecs(timeLeftInSeconds);\r\n    return {minutes: minutesLeft, seconds: secondsLeft}\r\n}\r\n\r\nconst CurrentTimeboxTimeLeft = connect(mapStateToProps)(\r\n    function Clock({ className, minutes, seconds }) {\r\n        // here making sure the numbers display as double digits\r\n        let minutesDisplay = minutes.toString();\r\n        if (minutesDisplay.length < 2) {\r\n            minutesDisplay = '0' + minutesDisplay;\r\n        };\r\n        let secondsDisplay = seconds.toString();\r\n        if (secondsDisplay.length < 2) {\r\n            secondsDisplay = '0' + secondsDisplay;\r\n        };\r\n\r\n        return <h2 className={\"Clock \" + className}>Pozostało {minutesDisplay}:{secondsDisplay}</h2>\r\n    }\r\n\r\n)\r\n\r\n/*\r\nClock.defaultProps = {\r\n        className: \"\"\r\n    }\r\nfunction NonNegativeNumbersType(props, propName, componentName) {\r\n        if (props[propName] < 0) {\r\n            return new Error(`Invalid prop '${propName}' issued to component '${componentName}'. It can't be negative.`);\r\n        };\r\n    };\r\nconst NumberOrStringType = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\r\nClock.propTypes = {\r\n    className: PropTypes.string.isRequired,\r\n    minutes: NumberOrStringType.isRequired,\r\n    seconds: NonNegativeNumbersType\r\n}\r\n*/\r\n\r\nexport default CurrentTimeboxTimeLeft;","function getMinsAndSecsFromSecs (timeInSeconds) {\r\n    const minutes = (timeInSeconds > 0) ? Math.floor(timeInSeconds/60) : 0;\r\n    const seconds = (timeInSeconds > 0) ? Math.floor(timeInSeconds%60) : 0;\r\n    return [minutes, seconds];\r\n}\r\n\r\nexport {\r\n    getMinsAndSecsFromSecs\r\n};","import React from 'react';\r\nimport classNames from \"classnames\";\r\n\r\nfunction ProgressBar({ \r\n    className = \"\", \r\n    percent = 33, \r\n    timeLeft = 15*60, \r\n    totalTime = 30*60, \r\n    color = null, \r\n    big = false\r\n}) {\r\n    let progressClassName = classNames(\r\n        \"progress\",\r\n        className,\r\n        {\r\n            \"progress--big\": big,\r\n            \"progress--color-red\": color === \"red\"\r\n        }\r\n    );\r\n    // try building className using: progressClassName = ['progress','progress--big'].join(' ');\r\n    // below: passing state variables into timeLeft/totalTime to make ProgressBar follow the timer\r\n    percent = timeLeft/totalTime*100;\r\n    return (\r\n        <div className={progressClassName}>\r\n            <div className=\"progress__bar\" style={{width: `${percent}%`}}></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProgressBar;","import React, { useContext, useRef, useEffect } from 'react';\r\nimport AuthenticationContext from '../contexts/AuthenticationContexts';\r\n\r\n\r\nimport Clock from \"./Clock\";\r\nimport ProgressBar from \"./ProgressBar\";\r\nimport { \r\n    getPauseStatus, \r\n    getRunningStatus, \r\n    getPausesCount, \r\n    getElapsedTimeInSeconds, \r\n    isTimeboxFinished \r\n} from './currentTimeboxReducer';\r\nimport { \r\n    closeCurrentTimebox, \r\n    startTimerAction, \r\n    stopTimerAction, \r\n    runTimer, \r\n    togglePauseAction, \r\n    resetCurrentTimebox, \r\n    finishTimeboxRemotely\r\n} from './actions';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getCurrentTimebox } from './timeboxesReducer';\r\n\r\nfunction CurrentTimebox() {\r\n\r\n    const dispatch = useDispatch();\r\n    const isPaused = useSelector(state => getPauseStatus(state.currentTimebox));\r\n    const isRunning = useSelector(state => getRunningStatus(state.currentTimebox));\r\n    const pausesCount = useSelector(state => getPausesCount(state.currentTimebox));\r\n    // all 'isFinished' logic is most probably completely unnecessary\r\n    const isFinished = useSelector(state => isTimeboxFinished(state.currentTimebox));\r\n    const elapsedTimeInSeconds = useSelector(state => getElapsedTimeInSeconds(state.currentTimebox));\r\n    //these selectors refer to timeboxesManager part of the state\r\n    const currentTimeboxFromState = useSelector(state => getCurrentTimebox(state.timeboxesManager));\r\n    const title = currentTimeboxFromState ? currentTimeboxFromState.title : null;\r\n    const totalTimeInMinutes = currentTimeboxFromState ? currentTimeboxFromState.totalTimeInMinutes : null;\r\n\r\n    const { accessToken } = useContext(AuthenticationContext);\r\n\r\n    let intervalIdRef = useRef(null);\r\n\r\n    function handleStart() {\r\n        dispatch(startTimerAction())\r\n        startTimer();\r\n    }\r\n    function handleStop() {\r\n        dispatch(stopTimerAction())\r\n        stopTimer();\r\n    }\r\n    function startTimer() {\r\n        if (intervalIdRef.current === null) {\r\n            intervalIdRef.current = window.setInterval(\r\n                () => dispatch(runTimer()), 100\r\n            )\r\n        }\r\n\r\n    }\r\n    useEffect(() => {\r\n        if (timeLeftInSeconds <= 0.001) {\r\n            dispatch(finishTimeboxRemotely(currentTimeboxFromState, accessToken));\r\n            dispatch(closeCurrentTimebox())\r\n\r\n            handleStop();\r\n        }\r\n    }, [elapsedTimeInSeconds])\r\n    function stopTimer() {\r\n        window.clearInterval(intervalIdRef.current);\r\n        intervalIdRef.current = null;\r\n    }\r\n    function togglePause() {\r\n        dispatch(togglePauseAction())\r\n        if (isPaused) {\r\n            startTimer();\r\n        } else {\r\n            stopTimer();\r\n        }\r\n    }\r\n    function handleBackToList() {\r\n        dispatch(closeCurrentTimebox())\r\n        dispatch(resetCurrentTimebox())\r\n        stopTimer()\r\n    }\r\n    // console.table(state);\r\n\r\n    const totalTimeInSeconds = totalTimeInMinutes * 60;\r\n    const timeLeftInSeconds = totalTimeInSeconds - elapsedTimeInSeconds;\r\n\r\n    return (\r\n        <>\r\n            {currentTimeboxFromState ?\r\n                <div className=\"CurrentTimebox\">\r\n                    <h1>{title}</h1>\r\n                    <Clock\r\n                        totalTimeInSeconds={totalTimeInSeconds}\r\n                        className={isPaused ? \"inactive\" : \"\"}\r\n                    />\r\n                    <ProgressBar\r\n                        className={isPaused ? \"inactive\" : \"\"}\r\n                        timeLeft={timeLeftInSeconds}\r\n                        totalTime={totalTimeInSeconds}\r\n                        color=\"purp\"\r\n                        big\r\n                    />\r\n                    <button onClick={handleStart} disabled={isRunning || isFinished}>Start</button>\r\n                    <button onClick={handleStop} disabled={!isRunning}>Stop</button>\r\n                    <button onClick={togglePause} disabled={!isRunning}>{isPaused ? \"Resume\" : \"Pause\"}</button>\r\n                    Pauses count: {pausesCount}\r\n                    <button onClick={handleBackToList}>Close</button>\r\n                </div> : null}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CurrentTimebox;","import React, { useEffect, useState } from 'react';\r\n\r\nfunction InspirationalQuote() {\r\n    const [quote, setQuote] = useState(null);\r\n\r\n    useEffect(() => {\r\n        import('inspirational-quotes').then(\r\n            (Quote) => {\r\n                setQuote(Quote.getQuote());\r\n            }\r\n        ).catch(() => console.log(\"Couldn't log qoutes\"));\r\n        console.count(\"Using useEffect!\");\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            {quote\r\n                ? <figure>\r\n                    <blockquote>{quote.text}</blockquote>\r\n                    <figcaption><cite>{quote.author}</cite></figcaption>\r\n                </figure>\r\n                : \"...\"\r\n            }\r\n        </>\r\n\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default InspirationalQuote;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Header from './Header';\r\nimport TimeboxManager from \"./TimeboxManager\"\r\nimport CurrentTimebox from \"./CurrentTimebox\";\r\nimport InspirationalQuote from './InspirationalQuoteFunc';\r\n\r\nconst headerRoot = document.getElementById(\"headerRoot\");\r\n\r\nfunction AuthenticatedApp() {\r\n    return (\r\n        <>\r\n            <Portal>\r\n                <Header />\r\n            </Portal>\r\n            <TimeboxManager />\r\n            <CurrentTimebox\r\n                \r\n            />\r\n            <InspirationalQuote />\r\n        </>\r\n\r\n    );\r\n}\r\n\r\nexport default AuthenticatedApp;\r\n\r\n\r\nclass Portal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.container = headerRoot;\r\n    }\r\n    /*\r\n    componentDidMount() {\r\n        document.appendChild(this.container);\r\n    }\r\n    componentWillUnmount() {\r\n        document.removeChild(this.container);\r\n    }\r\n    */\r\n    render() {\r\n        return ReactDOM.createPortal(this.props.children, this.container);\r\n    }\r\n}\r\n"],"names":["props","accessToken","useContext","AuthenticationContext","_jsxs","_Fragment","children","getUserEmail","jose","email","className","_jsx","UserGreeting","_ref","handleLogout","onClick","href","titleInput","useRef","totalTimeInMinutesInput","onSubmit","event","preventDefault","onCreate","title","current","value","totalTimeInMinutes","finished","ref","type","step","wait","ms","arguments","length","undefined","Promise","resolve","setTimeout","timeboxes","id","findIndexById","result","findIndex","timebox","Error","FakeTimeboxesAPI","getAllTimeboxes","_getAllTimeboxes","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","abrupt","concat","stop","apply","addTimebox","_addTimebox","_callee2","timeboxToAdd","addedTimebox","_context2","_objectSpread","uuidv4","push","_x","replaceTimebox","_replaceTimebox","_callee3","timeboxToReplace","replacedTimebox","_context3","_x2","removeTimebox","_removeTimebox","_callee4","timeboxToRemove","index","_context4","splice","_x3","TimeboxesList","renderTimebox","map","connect","state","timeboxesManager","RemainingTimeboxesList","getRemainingTimeboxes","React","resetToInitialValues","initialTitle","initialTotalTimeInMinutes","onUpdate","defaultValue","onCancel","EditableTimebox","ownProps","isEdited","isTimeboxEdited","dispatch","onEdit","currentlyEditedTimeboxId","onMakeCurrent","onDelete","TimeboxEditor","Timebox","TimeboxManager","useDispatch","timeboxesLoading","useSelector","areTimeboxesLoading","timeboxesLoadingError","getTimeboxesLoadingError","useEffect","TimeboxesAPI","then","setTimeboxes","catch","error","setError","finally","fetchAllTimeboxes","TimeboxCreator","createdTimebox","console","log","message","updatedTimebox","updateTimeboxRemotely","removedTimebox","removeTimeboxRemotely","contextType","timeInSeconds","elapsedTimeInSeconds","currentTimebox","timeLeftInSeconds","totalTimeInSeconds","_getMinsAndSecsFromSe","Math","floor","_getMinsAndSecsFromSe2","_slicedToArray","minutes","seconds","minutesDisplay","toString","secondsDisplay","percent","_ref$className","_ref$timeLeft","timeLeft","_ref$totalTime","totalTime","_ref$color","color","_ref$big","big","progressClassName","classNames","style","width","isPaused","getPauseStatus","isRunning","getRunningStatus","pausesCount","getPausesCount","isFinished","isTimeboxFinished","getElapsedTimeInSeconds","currentTimeboxFromState","getCurrentTimebox","intervalIdRef","handleStop","stopTimer","startTimer","window","setInterval","clearInterval","finishedTimebox","finishTimeboxOffTheList","finishTimeboxRemotely","Clock","ProgressBar","disabled","_useState","useState","_useState2","quote","setQuote","Quote","getQuote","count","text","author","headerRoot","document","getElementById","Portal","Header","CurrentTimebox","InspirationalQuote","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","call","container","_createClass","key","ReactDOM","this"],"sourceRoot":""}